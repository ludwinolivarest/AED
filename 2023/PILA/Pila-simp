#include <iostream>
using namespace std;

struct Nodo {
    int valor;
    Nodo* next;
    Nodo(int v, Nodo* n = NULL) {
        valor = v;
        next = n;
    }
};
struct Pila
{
    Nodo* Top = NULL;
    void Push(int x) {
        if (!Top)
            Top = new Nodo(x);
        else
            Top = new Nodo(x, Top);
    }
    int Pop() {
        int val = 0;
        if (Top) {
            Nodo* d;
            d = Top;
            Top = Top->next;
            val = d->valor;
            delete d;
            return val;
        }
        else {
            cout << "Vacia"<<endl;
        }        
    }
    void Imprimir() {
        for (Nodo* I = Top; I; I = I->next)
            cout << I->valor << "->";
        cout << endl;
    }
};
struct Cadena
{
    Nodo* Head = NULL, *Tail = NULL;
    void Push(int x) {
        if (!Head)
            Head = new Nodo(x), Tail = Head;
        else
            Tail->next = new Nodo(x),Tail = Tail->next;            
    }
    int Pop() {
        
        int a = 0;
        if (Head) {
            Nodo* tmp = Head;
            a = tmp->valor;
            Head = Head->next;
            delete tmp;
            return a;
        }
        else {
            cout << "Vacia"<<endl;
        }
    }
    void Imprimir() {
        for (Nodo* I = Head; I; I = I->next)
            cout << I->valor << "->";
        cout << endl;
    }
};

int main()
{
    Pila A;
    A.Push(2);
    A.Push(3);
    A.Push(4);
    A.Push(5);
    A.Imprimir();
    A.Pop();
    A.Pop();
    A.Pop();
    A.Pop();
    A.Pop();
    A.Pop();
    A.Pop();
    A.Imprimir();   
}

